 Remember Like This (Shortcut):
Keyword	When to Use
if-elif-else	 Jab condition check karna ho (decision making)
while	         Jab tak condition true hai (unknown repeats)
for	             Jab exact repeat chahiye (known loops – list, range)
break          	 Loop se turant nikalna ho
continue     	 Current step skip karke next pe jaana ho 


---------------------------------------------------------------------------------------

 WHEN TO USE if, elif, else?
Think of this as making decisions in life.

🧠 Real-life example:

"If it's raining, I'll take an umbrella. Else if it's cloudy, I’ll carry a jacket. Else, I’ll wear sunglasses."

💻 Use it when:

You want your code to choose one path from multiple options.

You compare conditions like scores, temperature, answers, etc.

---------------------------------------------------------------------------------------------

🔁 WHEN TO USE for LOOP?
Use for when you know how many times you want to repeat something.

🧠 Example:

“I’ll eat 5 biscuits, one by one.”
You know the number = 5 times.

💻 Example:

python
Copy code
for i in range(5):
    print("Eating biscuit", i + 1)
Use for:

Going through a list

Counting (range)

Fixed repetition


-------------------------------------------------------------------------------------


What is a while loop?
“Keep doing something while a condition is True.”

💡 As long as the condition is True → do the task
When the condition becomes False → stop.

🔁 What is while True?
This means:

while True:
    # Do something forever (unless stopped)
It runs forever unless you tell it to break.

💡 Use when you want an infinite loop that ends only with a condition.

✅ Example with break:

while True:
    password = input("Enter password: ")
    if password == "secret":
        print("Access granted")
        break
    else:
        print("Wrong password. Try again.")
🧠 Real-life version:

“Keep asking password until the user enters the correct one.”

🎯 When to use which:

while:    condition	Repeat until something happens (condition False)
while True + break	Repeat forever until YOU say stop (break)

while: condition Run until the condition becomes False
while True:	Run forever (unless you break it manually)
break:	Stop the loop completely
continue:	Skip current loop step and go to the next

------------------------------------------------------------------------------------

BREAK and CONTINUE
break: Stops the loop completely
🧠 “I’ll stop eating when I find a hair in food.”

for item in food:
    if item == "hair":
        break
    print("Eating", item)


---------------------------------------------------------------------------------------------

continue: Skips only that turn
🧠 “I’ll skip spicy food but eat the rest.”

python
Copy code
for item in food:
    if item == "spicy":
        continue
    print("Eating", item)



    -----------------------------------------------------------------------------------------------------

Use a while loop when:

✅ You don’t know how many times to repeat
(e.g. keep asking for user input until it's valid)

✅ You want to run code until a condition changes
(e.g. wait for a sensor or event to trigger)

✅ You're reading data until it's finished
(e.g. reading a file until end of file)

✅ You need a loop that depends on real-time logic
(e.g. a game loop or live server process)

✅ Condition-based algorithms
(e.g. binary search loop until range matches)

Short rule: 👉 Use while when the number of repetitions is unknown and depends on a condition.



*******************************************************************************************************

Simple 3-line memory hack:
🟢 for = “Kitni baar karna hai? Batao, main karta hu.”
🔵 while = “Jab tak condition true hai, karta rahunga.”
🟡 if-else = “Agar yeh sach hai toh yeh karo, warna woh karo.”



    ************************************************END***************************************************
